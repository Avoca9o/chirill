{"ast":null,"code":"var _jsxFileName = \"/Users/vladimirovdma/chirill/frontend/src/Video.js\",\n  _s = $RefreshSig$();\nimport ReactPlayer from 'react-player';\nimport { useRef } from 'react';\nimport videoFile from './resources/vid.mp4';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Video = () => {\n  _s();\n  const playerRef = useRef(null);\n\n  // Функция для воспроизведения видео\n  const handlePlay = () => {\n    if (playerRef.current) {\n      playerRef.current.seekTo(0); // Перематываем видео на начало\n      playerRef.current.getInternalPlayer().play(); // Воспроизводим видео\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      display: 'flex',\n      flexDirection: 'column',\n      // Вертикальное выравнивание\n      alignItems: 'center',\n      // Центрируем содержимое по горизонтали\n      justifyContent: 'center',\n      // Центрируем содержимое по вертикали\n      height: '100vh',\n      backgroundColor: '#f4f4f4'\n    },\n    children: [/*#__PURE__*/_jsxDEV(ReactPlayer, {\n      ref: playerRef // Подключаем реф к плееру\n      ,\n      url: videoFile // Видео URL\n      ,\n      controls: false // Показываем элементы управления\n      ,\n      playing: false // Видео не воспроизводится автоматически\n      ,\n      width: \"640px\" // Ширина\n      ,\n      height: \"360px\" // Высота\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handlePlay,\n      style: {\n        padding: '10px 20px',\n        fontSize: '18px',\n        backgroundColor: '#007bff',\n        color: 'white',\n        border: 'none',\n        borderRadius: '5px',\n        cursor: 'pointer',\n        marginTop: '20px',\n        transition: 'transform 0.2s ease-in-out'\n      },\n      children: \"Click\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 9\n  }, this);\n};\n_s(Video, \"ezlvRaRDG1HW7XN2TkWUyOHHTRM=\");\n_c = Video;\nexport default Video;\nvar _c;\n$RefreshReg$(_c, \"Video\");","map":{"version":3,"names":["ReactPlayer","useRef","videoFile","jsxDEV","_jsxDEV","Video","_s","playerRef","handlePlay","current","seekTo","getInternalPlayer","play","style","display","flexDirection","alignItems","justifyContent","height","backgroundColor","children","ref","url","controls","playing","width","fileName","_jsxFileName","lineNumber","columnNumber","onClick","padding","fontSize","color","border","borderRadius","cursor","marginTop","transition","_c","$RefreshReg$"],"sources":["/Users/vladimirovdma/chirill/frontend/src/Video.js"],"sourcesContent":["import ReactPlayer from 'react-player';\nimport { useRef } from 'react';\nimport videoFile from './resources/vid.mp4';\n\nconst Video = () => {\n    const playerRef = useRef(null);\n\n    // Функция для воспроизведения видео\n  const handlePlay = () => {\n    if (playerRef.current) {\n      playerRef.current.seekTo(0); // Перематываем видео на начало\n      playerRef.current.getInternalPlayer().play(); // Воспроизводим видео\n    }\n  };\n\n    return (\n        <div\n      style={{\n        display: 'flex',\n        flexDirection: 'column', // Вертикальное выравнивание\n        alignItems: 'center', // Центрируем содержимое по горизонтали\n        justifyContent: 'center', // Центрируем содержимое по вертикали\n        height: '100vh',\n        backgroundColor: '#f4f4f4',\n      }}\n    >\n      {/* Видео */}\n      <ReactPlayer\n        ref={playerRef} // Подключаем реф к плееру\n        url={videoFile} // Видео URL\n        controls={false} // Показываем элементы управления\n        playing={false} // Видео не воспроизводится автоматически\n        width=\"640px\" // Ширина\n        height=\"360px\" // Высота\n      />\n\n      {/* Кнопка воспроизведения */}\n      <button\n        onClick={handlePlay}\n        style={{\n          padding: '10px 20px',\n          fontSize: '18px',\n          backgroundColor: '#007bff',\n          color: 'white',\n          border: 'none',\n          borderRadius: '5px',\n          cursor: 'pointer',\n          marginTop: '20px',\n          transition: 'transform 0.2s ease-in-out',\n        }}\n      >\n        Click\n      </button>\n    </div>\n      );\n};\n\nexport default Video;"],"mappings":";;AAAA,OAAOA,WAAW,MAAM,cAAc;AACtC,SAASC,MAAM,QAAQ,OAAO;AAC9B,OAAOC,SAAS,MAAM,qBAAqB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE5C,MAAMC,KAAK,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAChB,MAAMC,SAAS,GAAGN,MAAM,CAAC,IAAI,CAAC;;EAE9B;EACF,MAAMO,UAAU,GAAGA,CAAA,KAAM;IACvB,IAAID,SAAS,CAACE,OAAO,EAAE;MACrBF,SAAS,CAACE,OAAO,CAACC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC;MAC7BH,SAAS,CAACE,OAAO,CAACE,iBAAiB,CAAC,CAAC,CAACC,IAAI,CAAC,CAAC,CAAC,CAAC;IAChD;EACF,CAAC;EAEC,oBACIR,OAAA;IACFS,KAAK,EAAE;MACLC,OAAO,EAAE,MAAM;MACfC,aAAa,EAAE,QAAQ;MAAE;MACzBC,UAAU,EAAE,QAAQ;MAAE;MACtBC,cAAc,EAAE,QAAQ;MAAE;MAC1BC,MAAM,EAAE,OAAO;MACfC,eAAe,EAAE;IACnB,CAAE;IAAAC,QAAA,gBAGFhB,OAAA,CAACJ,WAAW;MACVqB,GAAG,EAAEd,SAAU,CAAC;MAAA;MAChBe,GAAG,EAAEpB,SAAU,CAAC;MAAA;MAChBqB,QAAQ,EAAE,KAAM,CAAC;MAAA;MACjBC,OAAO,EAAE,KAAM,CAAC;MAAA;MAChBC,KAAK,EAAC,OAAO,CAAC;MAAA;MACdP,MAAM,EAAC,OAAO,CAAC;IAAA;MAAAQ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAChB,CAAC,eAGFzB,OAAA;MACE0B,OAAO,EAAEtB,UAAW;MACpBK,KAAK,EAAE;QACLkB,OAAO,EAAE,WAAW;QACpBC,QAAQ,EAAE,MAAM;QAChBb,eAAe,EAAE,SAAS;QAC1Bc,KAAK,EAAE,OAAO;QACdC,MAAM,EAAE,MAAM;QACdC,YAAY,EAAE,KAAK;QACnBC,MAAM,EAAE,SAAS;QACjBC,SAAS,EAAE,MAAM;QACjBC,UAAU,EAAE;MACd,CAAE;MAAAlB,QAAA,EACH;IAED;MAAAM,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACN,CAAC;AAEV,CAAC;AAACvB,EAAA,CAnDID,KAAK;AAAAkC,EAAA,GAALlC,KAAK;AAqDX,eAAeA,KAAK;AAAC,IAAAkC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}